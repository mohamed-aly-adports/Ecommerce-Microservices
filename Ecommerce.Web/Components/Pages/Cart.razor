@page "/cart/{productId:int}"
@rendermode InteractiveServer
@using Ecommerce.Model
@inject System.Net.Http.HttpClient http
@inject IJSRuntime jsRuntime
<h1>Cart</h1>
<form>
	<div class="form-group mb-4">
		<lable>Customer Name</lable>
		<input type="text" class="form-control" @bind="order.CustomerName"/>
	</div>
	<div class="form-group mb-4">
		<lable>Product Name</lable>
		<input type="text" class="form-control" @bind="product.Name" />
	</div>
	<div class="form-group mb-4">
		<label>Quantity</label>
		<input type="text" class="form-control" @bind="order.Quantity" />
	</div>
	<button type="button" class="btn btn-primary" @onclick="CreateOrder">
		Create Order
	</button>
</form>
@code {
	[Parameter]
	public int ProductId { get; set; }
	public OrderModel order = new OrderModel();
	public ProductModel product = new ProductModel();

	protected override async Task OnInitializedAsync()
	{
		order.ProductId = ProductId;
		product = await http.GetFromJsonAsync<ProductModel>($"https://localhost:7026/api/product/{ProductId}");
		await base.OnInitializedAsync();
	}
	public async Task CreateOrder()
	{
		var res = await http.PostAsJsonAsync<OrderModel>(
	"https://localhost:7106/api/Order", order);
		await jsRuntime.InvokeVoidAsync("alert", "start");
		if (res.IsSuccessStatusCode)
		{
			await jsRuntime.InvokeVoidAsync("alert", "Create order success");
		} 
	}
}